[versions]
serialization = "1.6.2"
jimmer = "0.9.45"
fastjson = "2.0.53"
#compose = "1.5.0"
hutool-allVersion = "5.8.35"
#kotlin = "1.9.22"
kotlin = "2.1.0"
#kotlin = "2.0.21"
compose-plugin = "1.7.3"
coroutines = "1.7.3"
ktor = "2.3.7"
logback = "1.4.11"
junit = "4.13.2"
compose-multiplatform = "1.7.0"
androidx-lifecycle = "2.8.4"
fastexcel = "1.0.0"
kotlinx-metadata-jvmVersion = "0.9.0"
ksp = "2.1.0-1.0.29"
dm = "8.1.2.79"
minio = "8.5.8"
x-file-storage = "2.1.0"
fastjson2 = "2.0.53"
spring-boot = "3.3.5"
spring-ai = "1.0.0-M6"
hutool = "5.8.26"
inputmapping = "1.1.1-beta"
knife4j = "4.5.0"
junit-jupiter = "5.8.1"
spring-dependency = "1.1.7"
pinyin4j = "2.5.1"
latest = "latest.release"

[libraries]
aspectj = { group = "org.aspectj", name = "aspectjweaver" }
compose-material3-desktop = { group = "org.jetbrains.compose.material3", name = "material3-desktop", version.ref = "compose-plugin" }
mysql-connector = { group = "com.mysql", name = "mysql-connector-j" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "serialization" }
dm = { group = "com.dameng", name = "DmJdbcDriver18", version.ref = "dm" }
h2 = { group = "com.h2database", name = "h2" }
junit-platform-launcher = { group = "org.junit.platform", name = "junit-platform-launcher" }
jimmer = { group = "org.babyfish.jimmer", name = "jimmer-spring-boot-starter", version.ref = "jimmer" }
jimmer-ksp = { group = "org.babyfish.jimmer", name = "jimmer-ksp", version.ref = "jimmer" }
postgresql = { group = "org.postgresql", name = "postgresql" }
spring-boot-starter-validation = { group = "org.springframework.boot", name = "spring-boot-starter-validation" }
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { group = "io.ktor", name = "ktor-client-cio", version.ref = "ktor" }
logback-classic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }
spring-boot-starter-test = { group = "org.springframework.boot", name = "spring-boot-starter-test" }
fastjson2-kotlin = { group = "com.alibaba.fastjson2", name = "fastjson2-kotlin", version.ref = "fastjson2" }
hutool-all = { group = "cn.hutool", name = "hutool-all", version.ref = "hutool" }
jackson-module-kotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
compose-icons-extended = { group = "org.jetbrains.compose.material", name = "material-icons-extended", version.ref = "compose-plugin" }
kotlin-test-junit5 = { group = "org.jetbrains.kotlin", name = "kotlin-test-junit5" }
spring-boot-starter-web = { group = "org.springframework.boot", name = "spring-boot-starter-web" }

kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
ktor-serialization-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
#logback = { group = "", name = "", version.ref = "logback" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
spring-ai-ollama-starter = { group = "org.springframework.ai", name = "spring-ai-ollama-spring-boot-starter" }
spring-ai-alibaba = { group = "com.alibaba.cloud.ai", name = "spring-ai-alibaba-starter" }
minio = { group = "io.minio", name = "minio", version.ref = "minio" }
knife4j-openapi3 = { group = "com.github.xiaoymin", name = "knife4j-openapi3-jakarta-spring-boot-starter", version.ref = "knife4j" }
spring-ai-tika-document-reader = { group = "org.springframework.ai", name = "spring-ai-tika-document-reader" }
pinyin4j = { group = "com.belerweb", name = "pinyin4j", version.ref = "pinyin4j" }
fastexcel = { group = "cn.idev.excel", name = "fastexcel", version.ref = "fastexcel" }
spring-ai-zhipuai = { group = "org.springframework.ai", name = "spring-ai-zhipuai-spring-boot-starter" }
spring-ai-bom = { group = "org.springframework.ai", name = "spring-ai-bom", version.ref = "spring-ai" }
spring-ai-pgvector-store-starter = { group = "org.springframework.ai", name = "spring-ai-pgvector-store-spring-boot-starter" }
x-file-storage-spring = { group = "org.dromara.x-file-storage", name = "x-file-storage-spring", version.ref = "x-file-storage" }
spring-ai-openai = { group = "org.springframework.ai", name = "spring-ai-openai-spring-boot-starter" }
inputmapping = { group = "com.google.android.libraries.play.games", name = "inputmapping", version.ref = "inputmapping" }
spring-ai-moonshot = { group = "org.springframework.ai", name = "spring-ai-moonshot-spring-boot-starter" }
org-jetbrains-kotlinx-kotlinx-metadata-jvm = { group = "org.jetbrains.kotlinx", name = "kotlinx-metadata-jvm", version.ref = "kotlinx-metadata-jvmVersion" }
junit-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junit-jupiter" }

[plugins]
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency" }

[bundles]
database = [ "postgresql" , "h2" ]
testing = ["spring-boot-starter-test", "kotlin-test-junit5", "junit-jupiter"]
spring-boot = ["aspectj", "spring-boot-starter-validation", "spring-boot-starter-web"]
spring-ai = ["spring-ai-ollama-starter", "spring-ai-pgvector-store-starter",
    "spring-ai-tika-document-reader"
#    ,"spring-ai-openai"
    ]
tools = ["jackson-module-kotlin", "kotlin-reflect", "fastjson2-kotlin", "hutool-all", "minio", "x-file-storage-spring", "pinyin4j", "fastexcel", "knife4j-openapi3"]
